{
  "swagger": "2.0",
  "info": {
    "description": "The Selling Partner API for Reports lets you request various reports that help the seller manage their Sell on Amazon business.",
    "version": "v0",
    "title": "Selling Partner API for Reports",
    "contact": {
      "name": "Selling Partner API Test Support",
      "url": "https://github.com/amzn/amazon-marketplace-api-sdk/issues",
      "email": "marketplaceapitest@amazon.com"
    },
    "license": {
      "name": "Amazon Software License",
      "url": "https://aws.amazon.com/asl/"
    }
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/reports/v0/requests": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReportRequestList",
        "description": "Returns a list of report requests that you can use to get the report request identifier for a report.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportTypeList"
          },
          {
            "$ref": "#/parameters/ReportRequestIdList"
          },
          {
            "$ref": "#/parameters/ReportProcessingStatusList"
          },
          {
            "$ref": "#/parameters/MaxCount"
          },
          {
            "$ref": "#/parameters/RequestedFromDate"
          },
          {
            "$ref": "#/parameters/RequestedToDate"
          },
          {
            "$ref": "#/parameters/NextToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_DISCOUNTS_REPORT_",
                        "_GET_AFN_INVENTORY_DATA_"
                      ]
                    },
                    "ReportRequestIds": {
                      "value": [
                        "ID1",
                        "ID2"
                      ]
                    },
                    "ReportProcessingStatuses": {
                      "value": [
                        "_SUBMITTED_",
                        "_IN_PROGRESS_"
                      ]
                    }
                  }
                },
                "response": {
                  "payload": {
                    "NextToken": "2985syiduy984hd89e43",
                    "HasNext": true,
                    "ReportRequestInfoList": [
                      {
                        "ReportRequestId": "ReportRequestId1",
                        "ReportType": "_FEE_DISCOUNTS_REPORT_",
                        "StartDate": "2019-12-11T13:47:20.677Z",
                        "EndDate": "2019-12-12T13:47:20.677Z",
                        "Scheduled": true,
                        "SubmittedDate": "2019-12-10T13:47:20.677Z",
                        "ReportProcessingStatus": "_IN_PROGRESS_",
                        "GeneratedReportId": "GeneratedReportId1",
                        "StartedProcessingDate": "2019-12-10T13:47:20.677Z",
                        "CompletedDate": "2019-12-12T13:47:20.677Z"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_DISCOUNTS_REPORT_",
                        "_GET_AFN_INVENTORY_DATA_"
                      ]
                    },
                    "ReportRequestIds": {
                      "value": [
                        "BADID1",
                        "BADID2"
                      ]
                    },
                    "ReportProcessingStatuses": {
                      "value": [
                        "_BAD_SUBMITTED_",
                        "_IN_PROGRESS_"
                      ]
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input in report processing status"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/requestCount": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReportRequestCount",
        "description": "Returns a count of report requests that have been submitted for processing.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportTypeList"
          },
          {
            "$ref": "#/parameters/ReportProcessingStatusList"
          },
          {
            "$ref": "#/parameters/RequestedFromDate"
          },
          {
            "$ref": "#/parameters/RequestedToDate"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_DISCOUNTS_REPORT_",
                        "_SC_VAT_TAX_REPORT_"
                      ]
                    },
                    "RequestedFromDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "Count": 23
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_BAD_REPORT_",
                        "_BAD_VAT_TAX_REPORT_"
                      ]
                    },
                    "RequestedFromDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportRequestCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/reports": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReportList",
        "description": "Returns a list of reports that were created in the previous 90 days.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportTypeList"
          },
          {
            "$ref": "#/parameters/ReportRequestIdList"
          },
          {
            "$ref": "#/parameters/Acknowledged"
          },
          {
            "$ref": "#/parameters/MaxCount"
          },
          {
            "$ref": "#/parameters/AvailableFromDate"
          },
          {
            "$ref": "#/parameters/AvailableToDate"
          },
          {
            "$ref": "#/parameters/NextToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_DISCOUNTS_REPORT_",
                        "_GET_AFN_INVENTORY_DATA_BY_COUNTRY_"
                      ]
                    },
                    "NextToken": {
                      "value": "9304839308terodfjr93804pweord342iert"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "NextToken": "9304839308terodfjr93804pweord342iertnext",
                    "HasNext": true,
                    "ReportInfoList": [
                      {
                        "ReportId": "2345324",
                        "ReportType": "_FEE_DISCOUNTS_REPORT_",
                        "ReportRequestId": "34534335",
                        "AvailableDate": "2019-12-11T14:49:53.952Z",
                        "Acknowledged": true,
                        "AcknowledgedDate": "2019-12-11T14:49:53.952Z"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_BAD_FEE_DISCOUNTS_REPORT_",
                        "_BAD_GET_AFN_INVENTORY_DATA_BY_COUNTRY_"
                      ]
                    },
                    "NextToken": {
                      "value": "9304839308terodfjr93804pweord342iert"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/reportCount": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReportCount",
        "description": "Returns a count of the reports created in the previous 90 days, with a status of _DONE_ and that are available for download.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportTypeList"
          },
          {
            "$ref": "#/parameters/Acknowledged"
          },
          {
            "$ref": "#/parameters/AvailableFromDate"
          },
          {
            "$ref": "#/parameters/AvailableToDate"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_DISCOUNTS_REPORT_",
                        "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_"
                      ]
                    },
                    "Acknowledged": {
                      "value": true
                    }
                  }
                },
                "response": {
                  "payload": {
                    "Count": 340
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_BAD_FEE_DISCOUNTS_REPORT_",
                        "_BAD_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_"
                      ]
                    },
                    "Acknowledged": {
                      "value": true
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/request/{reportType}": {
      "post": {
        "tags": [
          "reports"
        ],
        "operationId": "RequestReport",
        "description": "Creates a report request and submits the request.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportType"
          },
          {
            "name": "StartDate",
            "description": "The start of a date range, in ISO 8601 date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "EndDate",
            "description": "The end of a date range, in ISO 8601 date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "MarketplaceIds",
            "description": "A list of one or more marketplace identifiers for the marketplaces the seller is registered to sell in. The resulting report will include information for all marketplaces you specify. The default is the first marketplace that the seller registered to sell in.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "RequestReportBody",
            "description": "Additional information to pass to the report.",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RequestReportBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "reportType": {
                      "value": "_GET_MERCHANT_LISTINGS_ALL_DATA_"
                    },
                    "StartDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    },
                    "MarketplaceIds": {
                      "value": [
                        "A1PA6795UKMFR9",
                        "ATVPDKIKX0DER"
                      ]
                    }
                  }
                },
                "response": {
                  "payload": {
                    "ReportRequestInfo": {
                      "ReportRequestId": "ID323",
                      "ReportType": "_GET_MERCHANT_LISTINGS_ALL_DATA_",
                      "StartDate": "2019-12-10T14:53:45.962Z",
                      "EndDate": "2019-12-12T14:53:45.962Z",
                      "Scheduled": true,
                      "SubmittedDate": "2019-12-11T14:53:45.962Z",
                      "ReportProcessingStatus": "_CANCELLED_",
                      "GeneratedReportId": "3453485",
                      "StartedProcessingDate": "2019-12-11T14:53:45.962Z",
                      "CompletedDate": "2019-12-12T14:53:45.962Z"
                    }
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "reportType": {
                      "value": "_BAD_FEE_DISCOUNTS_REPORT_"
                    },
                    "StartDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    },
                    "MarketplaceIds": {
                      "value": [
                        "A1PA6795UKMFR9",
                        "ATVPDKIKX0DER"
                      ]
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/RequestReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/cancel": {
      "put": {
        "tags": [
          "reports"
        ],
        "operationId": "CancelReportRequests",
        "description": "Cancels one or more report requests.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportRequestIdList"
          },
          {
            "$ref": "#/parameters/ReportTypeList"
          },
          {
            "$ref": "#/parameters/ReportProcessingStatusList"
          },
          {
            "$ref": "#/parameters/RequestedFromDate"
          },
          {
            "$ref": "#/parameters/RequestedToDate"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportRequestIds": {
                      "value": [
                        "id1",
                        "id2"
                      ]
                    },
                    "ReportTypes": {
                      "value": [
                        "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_",
                        "_GET_CONVERGED_FLAT_FILE_SOLD_LISTINGS_DATA_"
                      ]
                    },
                    "RequestedFromDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "ReportRequestInfoList": [
                      {
                        "ReportRequestId": "id2",
                        "ReportType": "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_",
                        "StartDate": "2019-12-11T14:58:17.321Z",
                        "Scheduled": true,
                        "SubmittedDate": "2019-12-11T14:58:17.321Z",
                        "ReportProcessingStatus": "_CANCELLED_",
                        "GeneratedReportId": "id2gen",
                        "CompletedDate": "2019-12-14T14:58:17.321Z"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportRequestIds": {
                      "value": [
                        "badid1",
                        "badid2"
                      ]
                    },
                    "ReportTypes": {
                      "value": [
                        "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_",
                        "_GET_CONVERGED_FLAT_FILE_SOLD_LISTINGS_DATA_"
                      ]
                    },
                    "RequestedFromDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/CancelReportRequestsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/reports/{reportId}": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReport",
        "description": "Returns the location of a report and the details required to retrieve it.",
        "parameters": [
          {
            "name": "reportId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the report to download. For most reports, this identifier is returned either in the ReportId of the GetReportList operation or in the GeneratedReportId of the GetReportRequestList operation. For sellers in India getting Amazon Easy Ship documents, this identifier is returned in the ReportReferenceId element of the processing report of the Easy Ship Feed.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "reportId": {
                      "value": "ID323"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "destination": {
                      "channel": "cloudfront",
                      "url": "https://d34o8swod1owfl.cloudfront.net/Report_47700__GET_MERCHANT_LISTINGS_ALL_DATA_%2BKEY%3DReport_47700%2BMode%3DCBC%2BINITVEC%3Dc0+d6+dc+40+4e+0e+20+35+80+4b+e5+22+22+00+cc+b9"
                    },
                    "encryptionDetails": {
                      "standard": "AES",
                      "initializationVector": "c0 d6 dc 40 4e 0e 20 35 80 4b e5 22 22 00 cc b9",
                      "key": "Report_47700"
                    }
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "reportId": {
                      "value": "badReportId1"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/schedules": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReportScheduleList",
        "description": "Returns a list of order report requests that are scheduled to be submitted for processing.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportTypeList"
          },
          {
            "$ref": "#/parameters/NextToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_FEE_DISCOUNTS_REPORT_",
                        "_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA_"
                      ]
                    },
                    "NextToken": {
                      "value": "NEXT TOKEN VALUE"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "HasNext": true,
                    "ReportScheduleList": [
                      {
                        "ReportType": "_FEE_DISCOUNTS_REPORT_",
                        "Schedule": "_5_MINUTES_",
                        "ScheduledDate": "2019-12-11T15:03:44.973Z"
                      },
                      {
                        "ReportType": "_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA_",
                        "Schedule": "_5_MINUTES_",
                        "ScheduledDate": "2019-12-11T15:03:44.973Z"
                      }
                    ],
                    "NextToken": "NEXT TO NEXT TOKEN VALUE"
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_BAD_FEE_DISCOUNTS_REPORT_",
                        "_BAD_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA_"
                      ]
                    },
                    "NextToken": {
                      "value": "NEXT TOKEN VALUE"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleListResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/schedule/{reportType}": {
      "post": {
        "tags": [
          "reports"
        ],
        "operationId": "ManageReportSchedule",
        "description": "Creates, updates, or deletes a report request schedule for a specified report type.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportType"
          },
          {
            "$ref": "#/parameters/Schedule"
          },
          {
            "$ref": "#/parameters/ScheduleDate"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "reportType": {
                      "value": "_FEE_DISCOUNTS_REPORT_"
                    },
                    "Schedule": {
                      "value": "_5_MINUTES_"
                    },
                    "ScheduleDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    }
                  }
                },
                "response": {
                  "payload": {
                    "ReportScheduleList": [
                      {
                        "ReportType": "_GET_MERCHANT_LISTINGS_ALL_DATA_",
                        "Schedule": "_5_MINUTES_",
                        "ScheduledDate": "2019-12-11T15:07:42.911Z"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "reportType": {
                      "value": "_BAD_FEE_DISCOUNTS_REPORT_"
                    },
                    "Schedule": {
                      "value": "_5_MINUTES_"
                    },
                    "ScheduleDate": {
                      "value": "2019-12-10T20:11:24.000Z"
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/ManageReportScheduleResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/scheduleCount": {
      "get": {
        "tags": [
          "reports"
        ],
        "operationId": "GetReportScheduleCount",
        "description": "Returns a count of the report requests that are scheduled to be submitted.",
        "parameters": [
          {
            "$ref": "#/parameters/ReportTypeList"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_GET_CONVERGED_FLAT_FILE_ORDER_REPORT_DATA_",
                        "_GET_EASYSHIP_PICKEDUP_"
                      ]
                    }
                  }
                },
                "response": {
                  "payload": {
                    "Count": 435
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportTypes": {
                      "value": [
                        "_BAD_GET_CONVERGED_FLAT_FILE_ORDER_REPORT_DATA_",
                        "_BAD_GET_EASYSHIP_PICKEDUP_"
                      ]
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/GetReportScheduleCountResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    },
    "/reports/v0/acknowledgements": {
      "put": {
        "tags": [
          "reports"
        ],
        "operationId": "UpdateReportAcknowledgements",
        "description": "Updates the acknowledged status of one or more reports.",
        "parameters": [
          {
            "name": "ReportIds",
            "in": "query",
            "required": true,
            "type": "array",
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of report identifiers. The maximum number of reports that can be specified is 100.",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "Acknowledged",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false,
            "description": "A Boolean value that indicates that you have received and stored a report. Specify true to set the acknowledged status of a report to true. Specify false to set the acknowledged status of a report to false."
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportIds": {
                      "value": [
                        "id1",
                        "id2"
                      ]
                    },
                    "Acknowledged": {
                      "value": false
                    }
                  }
                },
                "response": {
                  "payload": {
                    "ReportInfoList": [
                      {
                        "ReportId": "id2",
                        "ReportType": "SOME VALID REPORT TYPE",
                        "ReportRequestId": "340954343",
                        "AvailableDate": "2019-12-11T15:11:23.978Z",
                        "Acknowledged": false,
                        "AcknowledgedDate": "2019-12-11T15:11:23.978Z"
                      },
                      {
                        "ReportId": "id1",
                        "ReportType": "SOME OTHER VALID REPORT TYPE",
                        "ReportRequestId": "340954343",
                        "AvailableDate": "2019-12-11T15:11:23.978Z",
                        "Acknowledged": false,
                        "AcknowledgedDate": "2019-12-11T15:11:23.978Z"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            },
            "x-amazon-spds-sandbox-behaviors": [
              {
                "request": {
                  "parameters": {
                    "ReportIds": {
                      "value": [
                        "badid1",
                        "badid2"
                      ]
                    },
                    "Acknowledged": {
                      "value": true
                    }
                  }
                },
                "response": {
                  "errors": [
                    {
                      "code": "400",
                      "message": "Invalid input",
                      "details": "Invalid input"
                    }
                  ]
                }
              }
            ]
          },
          "401": {
            "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "404": {
            "description": "The specified resource does not exist.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "schema": {
              "$ref": "#/definitions/UpdateReportAcknowledgementsResponse"
            },
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference identifier."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ErrorList": {
      "type": "array",
      "description": "A list of error responses returned when a request is unsuccessful.",
      "items": {
        "$ref": "#/definitions/Error"
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code that identifies the type of error that occurred."
        },
        "message": {
          "type": "string",
          "description": "A message that describes the error condition in a human-readable form."
        },
        "details": {
          "type": "string",
          "description": "Additional details that can help the caller understand or fix the issue."
        }
      },
      "description": "Error response returned when the request is unsuccessful."
    },
    "CancelReportRequestsResult": {
      "type": "object",
      "required": [
        "ReportRequestInfoList"
      ],
      "properties": {
        "ReportRequestInfoList": {
          "$ref": "#/definitions/ReportRequestInfoList"
        }
      }
    },
    "GetReportResult": {
      "type": "object",
      "properties": {
        "destination": {
          "$ref": "#/definitions/Destination"
        },
        "encryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails"
        },
        "isGzipped": {
          "type": "boolean"
        }
      }
    },
    "GetReportCountResult": {
      "type": "object",
      "properties": {
        "Count": {
          "description": "A non-negative integer that represents the total number of report requests.",
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "GetReportListResult": {
      "type": "object",
      "required": [
        "HasNext"
      ],
      "properties": {
        "NextToken": {
          "description": "When HasNext is true, pass this string token in the next request to return the next response page.",
          "type": "string"
        },
        "HasNext": {
          "description": "When true, provide the NextToken value in the next request to return the next response page.",
          "type": "boolean"
        },
        "ReportInfoList": {
          "$ref": "#/definitions/ReportInfoList"
        }
      }
    },
    "GetReportRequestCountResult": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "GetReportScheduleCountResult": {
      "type": "object",
      "properties": {
        "Count": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "GetReportScheduleListResult": {
      "type": "object",
      "required": [
        "ReportScheduleList"
      ],
      "properties": {
        "HasNext": {
          "description": "When true, provide the NextToken value in the next request to return the next response page.",
          "type": "boolean"
        },
        "ReportScheduleList": {
          "$ref": "#/definitions/ReportScheduleList"
        },
        "NextToken": {
          "description": "When HasNext is true, pass this string token in the next request to return the next response page.",
          "type": "string"
        }
      }
    },
    "ManageReportScheduleResult": {
      "type": "object",
      "required": [
        "ReportScheduleList"
      ],
      "properties": {
        "ReportScheduleList": {
          "$ref": "#/definitions/ReportScheduleList"
        }
      }
    },
    "UpdateReportAcknowledgementsResult": {
      "type": "object",
      "required": [
        "ReportInfoList"
      ],
      "properties": {
        "ReportInfoList": {
          "$ref": "#/definitions/ReportInfoList"
        }
      }
    },
    "Destination": {
      "description": "The location of the report content.",
      "type": "object",
      "properties": {
        "channel": {
          "description": "The distribution channel used to retrieve the report content.",
          "type": "string"
        },
        "url": {
          "description": "The URL of the report content.",
          "type": "string"
        }
      }
    },
    "EncryptionDetails": {
      "type": "object",
      "description": "Encryption details for required client-side decryption of report content.",
      "properties": {
        "standard": {
          "description": "The encryption standard required prior to upload.",
          "type": "string",
          "enum": [
            "AES"
          ]
        },
        "initializationVector": {
          "type": "string",
          "description": "The vector to decrypt the content using Cipher Block Chaining (CBC)."
        },
        "key": {
          "type": "string",
          "description": "The encryption key used to decrypt the content."
        }
      }
    },
    "ReportInfo": {
      "type": "object",
      "required": [
        "ReportId",
        "ReportType",
        "ReportRequestId",
        "AvailableDate",
        "Acknowledged"
      ],
      "properties": {
        "ReportId": {
          "description": "A unique report identifier.",
          "type": "string"
        },
        "ReportType": {
          "description": "The report type value requested.",
          "type": "string"
        },
        "ReportRequestId": {
          "description": "A unique report request identifier.",
          "type": "string"
        },
        "AvailableDate": {
          "description": "The date the report is available.",
          "type": "string",
          "format": "date-time"
        },
        "Acknowledged": {
          "description": "A Boolean value that indicates if the report was acknowledged. The value is true if the report was acknowledged; otherwise false.",
          "type": "boolean"
        },
        "AcknowledgedDate": {
          "description": "The date the report was acknowledged.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReportInfoList": {
      "description": "Detailed information about a report.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReportInfo"
      }
    },
    "ReportRequestInfo": {
      "type": "object",
      "required": [
        "ReportRequestId",
        "ReportType",
        "StartDate",
        "EndDate",
        "Scheduled",
        "SubmittedDate",
        "ReportProcessingStatus"
      ],
      "properties": {
        "ReportRequestId": {
          "description": "A unique report request identifier.",
          "type": "string"
        },
        "ReportType": {
          "description": "The report type value requested.",
          "type": "string"
        },
        "StartDate": {
          "description": "The start of a date range used for selecting the data to report.",
          "type": "string",
          "format": "date-time"
        },
        "EndDate": {
          "description": "The end of a date range used for selecting the data to report.",
          "type": "string",
          "format": "date-time"
        },
        "Scheduled": {
          "description": "A Boolean value that indicates if a report is scheduled. When true, the report was scheduled.",
          "type": "boolean"
        },
        "SubmittedDate": {
          "description": "The date when the report was submitted.",
          "type": "string",
          "format": "date-time"
        },
        "ReportProcessingStatus": {
          "description": "The processing status of the report.",
          "type": "string",
          "enum": [
            "_CANCELLED_",
            "_DONE_",
            "_IN_PROGRESS_",
            "_SUBMITTED_",
            "_DONE_NO_DATA_"
          ]
        },
        "GeneratedReportId": {
          "description": "The report identifier used to retrieve the report.",
          "type": "string"
        },
        "StartedProcessingDate": {
          "description": "The date when the report processing started.",
          "type": "string",
          "format": "date-time"
        },
        "CompletedDate": {
          "description": "The date when the report processing completed.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReportRequestInfoList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReportRequestInfo"
      }
    },
    "RequestReportBody": {
      "type": "object",
      "properties": {
        "ReportOptions": {
          "description": "Additional information to pass to the report if a report accepts report options.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ReportSchedule": {
      "description": "Detailed information about a report schedule.",
      "type": "object",
      "required": [
        "ReportType",
        "Schedule",
        "ScheduledDate"
      ],
      "properties": {
        "ReportType": {
          "description": "The report type value requested.",
          "type": "string"
        },
        "Schedule": {
          "description": "A value of the schedule that indicates how often a report request should be created.",
          "type": "string",
          "enum": [
            "_5_MINUTES_",
            "_15_MINUTES_",
            "_30_MINUTES_",
            "_1_HOUR_",
            "_2_HOURS_",
            "_4_HOURS_",
            "_8_HOURS_",
            "_12_HOURS_",
            "_1_DAY_",
            "_2_DAYS_",
            "_72_HOURS_",
            "_1_WEEK_",
            "_14_DAYS_",
            "_15_DAYS_",
            "_30_DAYS_",
            "_NEVER_"
          ]
        },
        "ScheduledDate": {
          "description": "The date when the next report request is scheduled to be submitted, in ISO 8601 date time format.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ReportScheduleList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ReportSchedule"
      }
    },
    "RequestReportResult": {
      "type": "object",
      "required": [
        "ReportRequestInfo"
      ],
      "properties": {
        "ReportRequestInfo": {
          "$ref": "#/definitions/ReportRequestInfo"
        }
      }
    },
    "GetReportRequestListResult": {
      "type": "object",
      "required": [
        "ReportRequestInfoList",
        "HasNext"
      ],
      "properties": {
        "NextToken": {
          "description": "When HasNext is true, pass this string token in the next request to return the next response page.",
          "type": "string"
        },
        "HasNext": {
          "description": "When true, provide the NextToken value in the next request to return the next response page.",
          "type": "boolean"
        },
        "ReportRequestInfoList": {
          "$ref": "#/definitions/ReportRequestInfoList"
        }
      }
    },
    "GetReportRequestListResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReportRequestList operation.",
          "$ref": "#/definitions/GetReportRequestListResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReportRequestList operation."
    },
    "GetReportRequestCountResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReportRequestCount operation.",
          "$ref": "#/definitions/GetReportRequestCountResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReportRequestCount operation."
    },
    "GetReportListResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReportList operation.",
          "$ref": "#/definitions/GetReportListResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReportList operation."
    },
    "GetReportCountResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReportCount operation.",
          "$ref": "#/definitions/GetReportCountResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReportCount operation."
    },
    "RequestReportResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the RequestReport operation.",
          "$ref": "#/definitions/RequestReportResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the RequestReport operation."
    },
    "CancelReportRequestsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the CancelReportRequests operation.",
          "$ref": "#/definitions/CancelReportRequestsResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the CancelReportRequests operation."
    },
    "GetReportResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReport operation.",
          "$ref": "#/definitions/GetReportResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReport operation."
    },
    "GetReportScheduleListResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReportScheduleList operation.",
          "$ref": "#/definitions/GetReportScheduleListResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReportScheduleList operation."
    },
    "GetReportScheduleCountResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the GetReportScheduleCount operation.",
          "$ref": "#/definitions/GetReportScheduleCountResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the GetReportScheduleCount operation."
    },
    "ManageReportScheduleResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the ManageReportSchedule operation.",
          "$ref": "#/definitions/ManageReportScheduleResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the ManageReportSchedule operation."
    },
    "UpdateReportAcknowledgementsResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "description": "The payload for the UpdateReportAcknowledgements operation.",
          "$ref": "#/definitions/UpdateReportAcknowledgementsResult"
        },
        "errors": {
          "$ref": "#/definitions/ErrorList"
        }
      },
      "description": "The response schema for the UpdateReportAcknowledgements operation."
    },
    "ReportTypeEnum": {
      "description": "The report type enumeration.",
      "type": "string",
      "enum": [
        "_FEE_DISCOUNTS_REPORT_",
        "_GET_AFN_INVENTORY_DATA_",
        "_GET_AFN_INVENTORY_DATA_BY_COUNTRY_",
        "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_",
        "_GET_CONVERGED_FLAT_FILE_ORDER_REPORT_DATA_",
        "_GET_CONVERGED_FLAT_FILE_PENDING_ORDERS_DATA_",
        "_GET_CONVERGED_FLAT_FILE_SOLD_LISTINGS_DATA_",
        "_GET_CSV_MFN_PRIME_RETURNS_REPORT_",
        "_GET_EASYSHIP_DOCUMENTS_",
        "_GET_EASYSHIP_PICKEDUP_",
        "_GET_EASYSHIP_WAITING_FOR_PICKUP_",
        "_GET_EXCESS_INVENTORY_DATA_",
        "_GET_FBA_ESTIMATED_FBA_FEES_TXT_DATA_",
        "_GET_FBA_FULFILLMENT_CURRENT_INVENTORY_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_RETURNS_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_PROMOTION_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_REPLACEMENT_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_SALES_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA_",
        "_GET_FBA_FULFILLMENT_INBOUND_NONCOMPLIANCE_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_ADJUSTMENTS_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_HEALTH_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_RECEIPTS_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_SUMMARY_DATA_",
        "_GET_FBA_FULFILLMENT_LONGTERM_STORAGE_FEE_CHARGES_DATA_",
        "_GET_FBA_FULFILLMENT_MONTHLY_INVENTORY_DATA_",
        "_GET_FBA_FULFILLMENT_REMOVAL_ORDER_DETAIL_DATA_",
        "_GET_FBA_FULFILLMENT_REMOVAL_SHIPMENT_DETAIL_DATA_",
        "_GET_FBA_INVENTORY_AGED_DATA_",
        "_GET_FBA_MYI_ALL_INVENTORY_DATA_",
        "_GET_FBA_MYI_UNSUPPRESSED_INVENTORY_DATA_",
        "_GET_FBA_RECOMMENDED_REMOVAL_DATA_",
        "_GET_FBA_REIMBURSEMENTS_DATA_",
        "_GET_FBA_STORAGE_FEE_CHARGES_DATA_",
        "_GET_FBA_UNO_INVENTORY_DATA_",
        "_GET_FLAT_FILE_ACTIONABLE_ORDER_DATA_",
        "_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_",
        "_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_",
        "_GET_FLAT_FILE_ARCHIVED_ORDERS_DATA_BY_ORDER_DATE_",
        "_GET_FLAT_FILE_GEO_OPPORTUNITIES_",
        "_GET_FLAT_FILE_MFN_SKU_RETURN_ATTRIBUTES_REPORT_",
        "_GET_FLAT_FILE_OFFAMAZONPAYMENTS_SANDBOX_SETTLEMENT_DATA_",
        "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_",
        "_GET_FLAT_FILE_ORDER_REPORT_DATA_",
        "_GET_FLAT_FILE_PENDING_ORDERS_DATA_",
        "_GET_FLAT_FILE_RETURNS_DATA_BY_RETURN_DATE_",
        "_GET_FLAT_FILE_SALES_TAX_DATA_",
        "_GET_GST_MTR_B2B_CUSTOM_",
        "_GET_GST_MTR_B2C_CUSTOM_",
        "_GET_MERCHANT_CANCELLED_LISTINGS_DATA_",
        "_GET_MERCHANT_LISTINGS_ALL_DATA_",
        "_GET_MERCHANT_LISTINGS_DATA_",
        "_GET_MERCHANT_LISTINGS_DATA_BACK_COMPAT_",
        "_GET_MERCHANT_LISTINGS_DATA_LITE_",
        "_GET_MERCHANT_LISTINGS_DATA_LITER_",
        "_GET_MERCHANT_LISTINGS_DEFECT_DATA_",
        "_GET_MERCHANT_LISTINGS_INACTIVE_DATA_",
        "_GET_MFN_PAN_EU_OFFER_STATUS_",
        "_GET_ORDERS_DATA_",
        "_GET_PAN_EU_OFFER_STATUS_",
        "_GET_PENDING_ORDERS_DATA_",
        "_GET_PRODUCT_EXCHANGE_DATA_",
        "_GET_REFERRAL_FEE_PREVIEW_REPORT_",
        "_GET_REMOTE_FULFILLMENT_ELIGIBILITY_",
        "_GET_RESERVED_INVENTORY_DATA_",
        "_GET_RESTOCK_INVENTORY_RECOMMENDATIONS_REPORT_",
        "_GET_SELLER_FEEDBACK_DATA_",
        "_GET_STRANDED_INVENTORY_LOADER_DATA_",
        "_GET_STRANDED_INVENTORY_UI_DATA_",
        "_GET_V1_SELLER_PERFORMANCE_REPORT_",
        "_GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE_",
        "_GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE_V2_",
        "_GET_V2_SETTLEMENT_REPORT_DATA_XML_",
        "_GET_VAT_TRANSACTION_DATA_",
        "_GET_XML_ALL_ORDERS_DATA_BY_LAST_UPDATE_",
        "_GET_XML_ALL_ORDERS_DATA_BY_ORDER_DATE_",
        "_GET_XML_BROWSE_TREE_DATA_",
        "_GET_XML_MFN_PRIME_RETURNS_REPORT_",
        "_GET_XML_MFN_SKU_RETURN_ATTRIBUTES_REPORT_",
        "_GET_XML_RETURNS_DATA_BY_RETURN_DATE_",
        "_RFQD_BULK_DOWNLOAD_",
        "_SC_VAT_TAX_REPORT_"
      ]
    }
  },
  "parameters": {
    "ReportType": {
      "name": "reportType",
      "in": "path",
      "description": "The report type. For possible values, see the ReportTypeEnum in the Swagger model.",
      "type": "string",
      "required": true,
      "enum": [
        "_FEE_DISCOUNTS_REPORT_",
        "_GET_AFN_INVENTORY_DATA_",
        "_GET_AFN_INVENTORY_DATA_BY_COUNTRY_",
        "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_",
        "_GET_CONVERGED_FLAT_FILE_ORDER_REPORT_DATA_",
        "_GET_CONVERGED_FLAT_FILE_PENDING_ORDERS_DATA_",
        "_GET_CONVERGED_FLAT_FILE_SOLD_LISTINGS_DATA_",
        "_GET_CSV_MFN_PRIME_RETURNS_REPORT_",
        "_GET_EASYSHIP_DOCUMENTS_",
        "_GET_EASYSHIP_PICKEDUP_",
        "_GET_EASYSHIP_WAITING_FOR_PICKUP_",
        "_GET_EXCESS_INVENTORY_DATA_",
        "_GET_FBA_ESTIMATED_FBA_FEES_TXT_DATA_",
        "_GET_FBA_FULFILLMENT_CURRENT_INVENTORY_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_RETURNS_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_PROMOTION_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_REPLACEMENT_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_SALES_DATA_",
        "_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA_",
        "_GET_FBA_FULFILLMENT_INBOUND_NONCOMPLIANCE_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_ADJUSTMENTS_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_HEALTH_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_RECEIPTS_DATA_",
        "_GET_FBA_FULFILLMENT_INVENTORY_SUMMARY_DATA_",
        "_GET_FBA_FULFILLMENT_LONGTERM_STORAGE_FEE_CHARGES_DATA_",
        "_GET_FBA_FULFILLMENT_MONTHLY_INVENTORY_DATA_",
        "_GET_FBA_FULFILLMENT_REMOVAL_ORDER_DETAIL_DATA_",
        "_GET_FBA_FULFILLMENT_REMOVAL_SHIPMENT_DETAIL_DATA_",
        "_GET_FBA_INVENTORY_AGED_DATA_",
        "_GET_FBA_MYI_ALL_INVENTORY_DATA_",
        "_GET_FBA_MYI_UNSUPPRESSED_INVENTORY_DATA_",
        "_GET_FBA_RECOMMENDED_REMOVAL_DATA_",
        "_GET_FBA_REIMBURSEMENTS_DATA_",
        "_GET_FBA_STORAGE_FEE_CHARGES_DATA_",
        "_GET_FBA_UNO_INVENTORY_DATA_",
        "_GET_FLAT_FILE_ACTIONABLE_ORDER_DATA_",
        "_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_",
        "_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_",
        "_GET_FLAT_FILE_ARCHIVED_ORDERS_DATA_BY_ORDER_DATE_",
        "_GET_FLAT_FILE_GEO_OPPORTUNITIES_",
        "_GET_FLAT_FILE_MFN_SKU_RETURN_ATTRIBUTES_REPORT_",
        "_GET_FLAT_FILE_OFFAMAZONPAYMENTS_SANDBOX_SETTLEMENT_DATA_",
        "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_",
        "_GET_FLAT_FILE_ORDER_REPORT_DATA_",
        "_GET_FLAT_FILE_PENDING_ORDERS_DATA_",
        "_GET_FLAT_FILE_RETURNS_DATA_BY_RETURN_DATE_",
        "_GET_FLAT_FILE_SALES_TAX_DATA_",
        "_GET_GST_MTR_B2B_CUSTOM_",
        "_GET_GST_MTR_B2C_CUSTOM_",
        "_GET_MERCHANT_CANCELLED_LISTINGS_DATA_",
        "_GET_MERCHANT_LISTINGS_ALL_DATA_",
        "_GET_MERCHANT_LISTINGS_DATA_",
        "_GET_MERCHANT_LISTINGS_DATA_BACK_COMPAT_",
        "_GET_MERCHANT_LISTINGS_DATA_LITE_",
        "_GET_MERCHANT_LISTINGS_DATA_LITER_",
        "_GET_MERCHANT_LISTINGS_DEFECT_DATA_",
        "_GET_MERCHANT_LISTINGS_INACTIVE_DATA_",
        "_GET_MFN_PAN_EU_OFFER_STATUS_",
        "_GET_ORDERS_DATA_",
        "_GET_PAN_EU_OFFER_STATUS_",
        "_GET_PENDING_ORDERS_DATA_",
        "_GET_PRODUCT_EXCHANGE_DATA_",
        "_GET_REFERRAL_FEE_PREVIEW_REPORT_",
        "_GET_REMOTE_FULFILLMENT_ELIGIBILITY_",
        "_GET_RESERVED_INVENTORY_DATA_",
        "_GET_RESTOCK_INVENTORY_RECOMMENDATIONS_REPORT_",
        "_GET_SELLER_FEEDBACK_DATA_",
        "_GET_STRANDED_INVENTORY_LOADER_DATA_",
        "_GET_STRANDED_INVENTORY_UI_DATA_",
        "_GET_V1_SELLER_PERFORMANCE_REPORT_",
        "_GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE_",
        "_GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE_V2_",
        "_GET_V2_SETTLEMENT_REPORT_DATA_XML_",
        "_GET_VAT_TRANSACTION_DATA_",
        "_GET_XML_ALL_ORDERS_DATA_BY_LAST_UPDATE_",
        "_GET_XML_ALL_ORDERS_DATA_BY_ORDER_DATE_",
        "_GET_XML_BROWSE_TREE_DATA_",
        "_GET_XML_MFN_PRIME_RETURNS_REPORT_",
        "_GET_XML_MFN_SKU_RETURN_ATTRIBUTES_REPORT_",
        "_GET_XML_RETURNS_DATA_BY_RETURN_DATE_",
        "_RFQD_BULK_DOWNLOAD_",
        "_SC_VAT_TAX_REPORT_"
      ]
    },
    "ReportTypeList": {
      "name": "ReportTypes",
      "in": "query",
      "required": false,
      "type": "array",
      "description": "A list of report type enumeration values.",
      "items": {
        "type": "string",
        "enum": [
          "_FEE_DISCOUNTS_REPORT_",
          "_GET_AFN_INVENTORY_DATA_",
          "_GET_AFN_INVENTORY_DATA_BY_COUNTRY_",
          "_GET_AMAZON_FULFILLED_SHIPMENTS_DATA_",
          "_GET_CONVERGED_FLAT_FILE_ORDER_REPORT_DATA_",
          "_GET_CONVERGED_FLAT_FILE_PENDING_ORDERS_DATA_",
          "_GET_CONVERGED_FLAT_FILE_SOLD_LISTINGS_DATA_",
          "_GET_CSV_MFN_PRIME_RETURNS_REPORT_",
          "_GET_EASYSHIP_DOCUMENTS_",
          "_GET_EASYSHIP_PICKEDUP_",
          "_GET_EASYSHIP_WAITING_FOR_PICKUP_",
          "_GET_EXCESS_INVENTORY_DATA_",
          "_GET_FBA_ESTIMATED_FBA_FEES_TXT_DATA_",
          "_GET_FBA_FULFILLMENT_CURRENT_INVENTORY_DATA_",
          "_GET_FBA_FULFILLMENT_CUSTOMER_RETURNS_DATA_",
          "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_PROMOTION_DATA_",
          "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_REPLACEMENT_DATA_",
          "_GET_FBA_FULFILLMENT_CUSTOMER_SHIPMENT_SALES_DATA_",
          "_GET_FBA_FULFILLMENT_CUSTOMER_TAXES_DATA_",
          "_GET_FBA_FULFILLMENT_INBOUND_NONCOMPLIANCE_DATA_",
          "_GET_FBA_FULFILLMENT_INVENTORY_ADJUSTMENTS_DATA_",
          "_GET_FBA_FULFILLMENT_INVENTORY_HEALTH_DATA_",
          "_GET_FBA_FULFILLMENT_INVENTORY_RECEIPTS_DATA_",
          "_GET_FBA_FULFILLMENT_INVENTORY_SUMMARY_DATA_",
          "_GET_FBA_FULFILLMENT_LONGTERM_STORAGE_FEE_CHARGES_DATA_",
          "_GET_FBA_FULFILLMENT_MONTHLY_INVENTORY_DATA_",
          "_GET_FBA_FULFILLMENT_REMOVAL_ORDER_DETAIL_DATA_",
          "_GET_FBA_FULFILLMENT_REMOVAL_SHIPMENT_DETAIL_DATA_",
          "_GET_FBA_INVENTORY_AGED_DATA_",
          "_GET_FBA_MYI_ALL_INVENTORY_DATA_",
          "_GET_FBA_MYI_UNSUPPRESSED_INVENTORY_DATA_",
          "_GET_FBA_RECOMMENDED_REMOVAL_DATA_",
          "_GET_FBA_REIMBURSEMENTS_DATA_",
          "_GET_FBA_STORAGE_FEE_CHARGES_DATA_",
          "_GET_FBA_UNO_INVENTORY_DATA_",
          "_GET_FLAT_FILE_ACTIONABLE_ORDER_DATA_",
          "_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_LAST_UPDATE_",
          "_GET_FLAT_FILE_ALL_ORDERS_DATA_BY_ORDER_DATE_",
          "_GET_FLAT_FILE_ARCHIVED_ORDERS_DATA_BY_ORDER_DATE_",
          "_GET_FLAT_FILE_GEO_OPPORTUNITIES_",
          "_GET_FLAT_FILE_MFN_SKU_RETURN_ATTRIBUTES_REPORT_",
          "_GET_FLAT_FILE_OFFAMAZONPAYMENTS_SANDBOX_SETTLEMENT_DATA_",
          "_GET_FLAT_FILE_OPEN_LISTINGS_DATA_",
          "_GET_FLAT_FILE_ORDER_REPORT_DATA_",
          "_GET_FLAT_FILE_PENDING_ORDERS_DATA_",
          "_GET_FLAT_FILE_RETURNS_DATA_BY_RETURN_DATE_",
          "_GET_FLAT_FILE_SALES_TAX_DATA_",
          "_GET_GST_MTR_B2B_CUSTOM_",
          "_GET_GST_MTR_B2C_CUSTOM_",
          "_GET_MERCHANT_CANCELLED_LISTINGS_DATA_",
          "_GET_MERCHANT_LISTINGS_ALL_DATA_",
          "_GET_MERCHANT_LISTINGS_DATA_",
          "_GET_MERCHANT_LISTINGS_DATA_BACK_COMPAT_",
          "_GET_MERCHANT_LISTINGS_DATA_LITE_",
          "_GET_MERCHANT_LISTINGS_DATA_LITER_",
          "_GET_MERCHANT_LISTINGS_DEFECT_DATA_",
          "_GET_MERCHANT_LISTINGS_INACTIVE_DATA_",
          "_GET_MFN_PAN_EU_OFFER_STATUS_",
          "_GET_ORDERS_DATA_",
          "_GET_PAN_EU_OFFER_STATUS_",
          "_GET_PENDING_ORDERS_DATA_",
          "_GET_PRODUCT_EXCHANGE_DATA_",
          "_GET_REFERRAL_FEE_PREVIEW_REPORT_",
          "_GET_REMOTE_FULFILLMENT_ELIGIBILITY_",
          "_GET_RESERVED_INVENTORY_DATA_",
          "_GET_RESTOCK_INVENTORY_RECOMMENDATIONS_REPORT_",
          "_GET_SELLER_FEEDBACK_DATA_",
          "_GET_STRANDED_INVENTORY_LOADER_DATA_",
          "_GET_STRANDED_INVENTORY_UI_DATA_",
          "_GET_V1_SELLER_PERFORMANCE_REPORT_",
          "_GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE_",
          "_GET_V2_SETTLEMENT_REPORT_DATA_FLAT_FILE_V2_",
          "_GET_V2_SETTLEMENT_REPORT_DATA_XML_",
          "_GET_VAT_TRANSACTION_DATA_",
          "_GET_XML_ALL_ORDERS_DATA_BY_LAST_UPDATE_",
          "_GET_XML_ALL_ORDERS_DATA_BY_ORDER_DATE_",
          "_GET_XML_BROWSE_TREE_DATA_",
          "_GET_XML_MFN_PRIME_RETURNS_REPORT_",
          "_GET_XML_MFN_SKU_RETURN_ATTRIBUTES_REPORT_",
          "_GET_XML_RETURNS_DATA_BY_RETURN_DATE_",
          "_RFQD_BULK_DOWNLOAD_",
          "_SC_VAT_TAX_REPORT_"
        ]
      }
    },
    "ReportProcessingStatusList": {
      "name": "ReportProcessingStatuses",
      "in": "query",
      "description": "A list of report processing statuses by which to filter report requests. Possible values: _SUBMITTED_, _IN_PROGRESS_, _CANCELLED_, _DONE_, _DONE_NO_DATA_.",
      "required": false,
      "type": "array",
      "maxItems": 100,
      "items": {
        "type": "string",
        "enum": [
          "_SUBMITTED_",
          "_IN_PROGRESS_",
          "_CANCELLED_",
          "_DONE_",
          "_DONE_NO_DATA_"
        ]
      }
    },
    "RequestedFromDate": {
      "name": "RequestedFromDate",
      "in": "query",
      "description": "The start of the date range used for selecting the data to report, in ISO 8601 date time format. The default is 90 days ago.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "RequestedToDate": {
      "name": "RequestedToDate",
      "in": "query",
      "description": "The end of the date range used for selecting the data to report, in ISO 8601 date time format. The default is now.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "MaxCount": {
      "name": "MaxCount",
      "in": "query",
      "description": "A non-negative integer that indicates the maximum number of feed submissions to return in the list.",
      "required": false,
      "type": "integer",
      "minimum": 1,
      "maximum": 100,
      "default": 10
    },
    "NextToken": {
      "name": "NextToken",
      "in": "query",
      "description": "A string token returned in the response to your previous request.",
      "required": false,
      "type": "string"
    },
    "ReportRequestIdList": {
      "name": "ReportRequestIds",
      "in": "query",
      "description": "A list of report request identifier values. If you provide these values, other query conditions are ignored.",
      "required": false,
      "type": "array",
      "maxItems": 100,
      "items": {
        "type": "string"
      }
    },
    "Acknowledged": {
      "name": "Acknowledged",
      "in": "query",
      "required": false,
      "type": "boolean",
      "description": "A Boolean value that indicates if an order report has been acknowledged by a prior call to UpdateReportAcknowledgements. Set to true to list order reports that have been acknowledged; set to false to list order reports that have not been acknowledged. This filter is valid only with order reports; it does not work with listing reports."
    },
    "AvailableFromDate": {
      "name": "AvailableFromDate",
      "in": "query",
      "description": "The earliest date you are looking for, in ISO 8601 date time format.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "AvailableToDate": {
      "name": "AvailableToDate",
      "in": "query",
      "description": "The most recent date you are looking for, in ISO 8601 date time format.",
      "required": false,
      "type": "string",
      "format": "date-time"
    },
    "Schedule": {
      "name": "Schedule",
      "in": "query",
      "description": "The Schedule enumeration provides the units of time that indicate how often a report request can be requested. For example, the ManageReportSchedule operation uses the Schedule value to indicate how often a report request is submitted.",
      "required": true,
      "type": "string",
      "enum": [
        "_5_MINUTES_",
        "_15_MINUTES_",
        "_30_MINUTES_",
        "_1_HOUR_",
        "_2_HOURS_",
        "_4_HOURS_",
        "_8_HOURS_",
        "_12_HOURS_",
        "_1_DAY_",
        "_2_DAYS_",
        "_72_HOURS_",
        "_1_WEEK_",
        "_14_DAYS_",
        "_15_DAYS_",
        "_30_DAYS_",
        "_NEVER_"
      ]
    },
    "ScheduleDate": {
      "name": "ScheduleDate",
      "description": "The date when the next report request is scheduled to be submitted.",
      "in": "query",
      "required": false,
      "type": "string",
      "format": "date-time"
    }
  },
  "basePath": "/"
}